{"version":3,"sources":["components/DatePicker/DatePicker.module.css","utils/ShowComponent/ShowComponent.module.css","components/DateEdit/DateEdit.module.css","utils/ShowResult/ShowResult.module.css","components/BitBtn/BitBtn.module.css","components/ModalWindowAtElement/ModalWindowAtElement.module.css","components/Memo/Memo.module.css","components/GroupBox/GroupBox.module.css","components/DatePickerTable/DatePickerTable.module.css","utils/ShowComponent/ShowComponent.tsx","utils/ShowResult/ShowResult.tsx","components/Label/Label.tsx","components/Edit/Edit.tsx","components/CheckBox/CheckBox.tsx","components/BitBtn/BitBtn.tsx","components/Memo/Memo.tsx","components/ComboBox/ComboBox.tsx","components/GroupBox/GroupBox.tsx","components/ModalWindowAtElement/ModalWindowAtElement.tsx","components/DatePicker/DatePicker.tsx","components/DatePickerTable/DatePickerTable.tsx","components/DateEdit/DateEdit.tsx","App.tsx","index.tsx"],"names":["module","exports","ShowComponent","props","className","styles","block","name","body","children","ShowResult","resultText","result","Label","style","caption","Edit","title","textAlignmentRight","text","restProps","value","CheckBox","type","BitBtn","image","imageWidth","imageHeight","imageStyle","width","height","src","alt","Memo","lines","textarea","join","ComboBox","items","itemIndex","onMouseDown","onKeyDown","onBlur","onChange","useState","index","setIndex","selected","setSelected","selectStyle","minWidth","onMouseKeyDown","e","code","currentTarget","map","item","i","GroupBox","ModalWindowAtElement","active","modalEntireWindow","onClick","onModalEntireWindowClick","modalContent","DAYS_OF_WEEK_RUS","MONTHS_RUS","MIN_DATE","Date","MAX_DATE","daysOfWeekFromArray","arr","res","el","bodyLine","getTitleDate","date","dayOfWeek","getDay","getMonth","getFullYear","getDate","DatePicker","currentMonth","initDate","now","initTitleDate","previousMonthButton","nextMonthButton","showFooterContent","showFooterButtons","border","today","titleEditMode","setTitleEditMode","selectedDate","setSelectedDate","titleDate","setTitleDate","firstDayOfMonth","dayOfWeekOfFirstDayOfMonth","beginDate","numberOfWeeks","NUMBER_OF_5_WEEKS","setNewSelectedDay","containerBorder","header","titleButton","previousMonthFunction","setMonth","titleText","onDoubleClick","display","justifyContent","alignItems","changeTitleDate","selectedMonthYear","currentYear","years","push","allYears","toLocaleString","month","nextMonthFunction","bodyBackground","margin","a","line","b","lineElement","lineElementClassName1","toDateString","lineElementToday","lineElementClassName2","lineElementSelected","dateElement","setDate","daysLinesFromDate","footer","currentDateTitle","monthBoardButtons","monthBoardButton","monthBoardButtonUp","monthBoardButtonLeft","monthBoardButtonDown","monthBoardButtonRight","key","DatePickerTable","initSize","table","setTable","tableContent","cellSpacing","cellPadding","outerContent","y","innerContent","x","show","state","size","getInitSize","createDatePickersTable","DateEdit","showBorder","setSize","modalActive","setModalActive","container","inputDate","placeholder","maxLength","day","year","newDate","App","edit1","setEdit1","edit2","setEdit2","checkBox1","setCheckBox1","checkBox2","setCheckBox2","memo1","setMemo1","comboBoxItems1","comboBoxItemIndex1","setComboBoxItemIndex1","comboBoxItems2","comboBoxItemIndex2","setComboBoxItemIndex2","date1","setDate1","date2","setDate2","date3","setDate3","alert","color","checked","rows","cols","split","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da741d44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DatePicker_container__39YqJ\",\"containerBorder\":\"DatePicker_containerBorder__1Y7Ga\",\"header\":\"DatePicker_header__VcpTg\",\"titleButton\":\"DatePicker_titleButton__vF326\",\"titleText\":\"DatePicker_titleText__3j4a4\",\"selectedMonthYear\":\"DatePicker_selectedMonthYear__t5CiU\",\"body\":\"DatePicker_body__34n3e\",\"bodyBackground\":\"DatePicker_bodyBackground__-cF1H\",\"bodyLine\":\"DatePicker_bodyLine__1jPSH\",\"lineElement\":\"DatePicker_lineElement__pksM7\",\"lineElementToday\":\"DatePicker_lineElementToday__3qZ_H\",\"lineElementSelected\":\"DatePicker_lineElementSelected__1vMQi\",\"footer\":\"DatePicker_footer__3CCSF\",\"currentDateTitle\":\"DatePicker_currentDateTitle__FjYSB\",\"monthBoardButtons\":\"DatePicker_monthBoardButtons__2dhoI\",\"monthBoardButton\":\"DatePicker_monthBoardButton__H5FKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ShowComponent_block__11O8O\",\"name\":\"ShowComponent_name__9rbjd\",\"body\":\"ShowComponent_body__2AvZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DateEdit_container__1uTvE\",\"containerBorder\":\"DateEdit_containerBorder__lphe9\",\"inputDate\":\"DateEdit_inputDate__1-NEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ShowResult_block__1z30j\",\"resultText\":\"ShowResult_resultText__2yBac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"BitBtn_block__3EK9q\",\"image\":\"BitBtn_image__13fCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalEntireWindow\":\"ModalWindowAtElement_modalEntireWindow__3HCeO\",\"modalContent\":\"ModalWindowAtElement_modalContent__U9CAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Memo_textarea__2YXkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"GroupBox_block__2HqhI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContent\":\"DatePickerTable_tableContent__3kZw9\"};","import React from 'react'\r\nimport styles from './ShowComponent.module.css'\r\n\r\n\r\ntype ShowComponentPropsType = {\r\n    name: string\r\n}\r\n\r\nexport const ShowComponent: React.FC<ShowComponentPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.block}>\r\n            <div className={styles.name}>\r\n                {props.name}\r\n            </div>\r\n\r\n            <div className={styles.body}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport styles from './ShowResult.module.css'\r\n\r\n\r\ntype PropsType = {\r\n    result: string\r\n}\r\n\r\nexport const ShowResult = (props: PropsType) => {\r\n    return (\r\n        <div className={styles.block}>\r\n            <b>Result: </b>\r\n            <span className={styles.resultText}>{props.result}</span>\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, HTMLAttributes} from 'react'\r\nimport styles from './Label.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultLabelPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype LabelPropsType = DefaultLabelPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    caption: string\r\n}\r\n\r\nexport const Label: React.FC<LabelPropsType> = (props) => {\r\n    return (\r\n        <span style={props.style}>\r\n            {props.caption}\r\n        </span>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport styles from './Edit.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype EditPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    title?: string\r\n    textAlignmentRight?: boolean\r\n    text: string\r\n}\r\n\r\nexport const Edit: React.FC<EditPropsType> = (props) => {\r\n    const {\r\n        title = '',\r\n        textAlignmentRight = false,\r\n        text,\r\n        value,\r\n        ...restProps\r\n    } = props\r\n\r\n    return (\r\n        <label>\r\n            {!textAlignmentRight && <span>{title}</span>}\r\n            <input\r\n                value={text}\r\n                {...restProps}\r\n            />\r\n            {textAlignmentRight && <span>{title}</span>}\r\n        </label>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport styles from './CheckBox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype CheckBoxPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    textAlignmentRight?: boolean\r\n    caption: string\r\n}\r\n\r\nexport const CheckBox: React.FC<CheckBoxPropsType> = (props) => {\r\n    const {\r\n        textAlignmentRight,\r\n        caption,\r\n        type,\r\n        ...restProps\r\n    } = props\r\n\r\n    return (\r\n        <label>\r\n            {!textAlignmentRight && caption}\r\n            <input\r\n                type={'checkbox'}\r\n                {...restProps}\r\n            />\r\n            {textAlignmentRight && caption}\r\n        </label>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport styles from './BitBtn.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype BitBtnPropsType = DefaultButtonPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    caption: string\r\n    image?: string\r\n    imageWidth?: number\r\n    imageHeight?: number\r\n}\r\n\r\nexport const BitBtn: React.FC<BitBtnPropsType> = (props) => {\r\n    const {\r\n        caption,\r\n        image,\r\n        imageWidth = 20,\r\n        imageHeight = 20,\r\n        ...restProps\r\n    } = props\r\n\r\n    const imageStyle = {\r\n        width: imageWidth,\r\n        height: imageHeight,\r\n    }\r\n\r\n    return (\r\n        <button\r\n            {...restProps}\r\n        >\r\n            <div className={styles.block}>\r\n                {image && <img\r\n                    className={styles.image}\r\n                    style={imageStyle}\r\n                    src={image}\r\n                    alt={'BitBtn'}\r\n                />}\r\n                {caption}\r\n            </div>\r\n        </button>\r\n    )\r\n}","import React, {DetailedHTMLProps, TextareaHTMLAttributes} from 'react'\r\nimport styles from './Memo.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultTextareaPropsType = DetailedHTMLProps<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype MemoPropsType = DefaultTextareaPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    lines?: Array<string>\r\n}\r\n\r\nexport const Memo: React.FC<MemoPropsType> = (props) => {\r\n    const {\r\n        lines = [],\r\n        value,\r\n        ...restProps\r\n    } = props\r\n\r\n    return (\r\n        <>\r\n            <textarea\r\n                className={styles.textarea}\r\n                // value={lines.join('\\r\\n')}\r\n                value={lines.join('\\n')}\r\n                {...restProps}\r\n            />\r\n        </>\r\n    )\r\n}","import React, {DetailedHTMLProps, SelectHTMLAttributes, useState} from 'react'\r\nimport styles from './ComboBox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype ComboBoxPropsType = DefaultSelectPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    items?: Array<string>\r\n    itemIndex?: number\r\n    width?: number\r\n}\r\n\r\nexport const ComboBox: React.FC<ComboBoxPropsType> = (props) => {\r\n    const {\r\n        items = [],\r\n        itemIndex = 0,\r\n        width = 0,\r\n        style = {},\r\n\r\n        onMouseDown,\r\n        onKeyDown,\r\n        onBlur,\r\n        onChange,\r\n\r\n        ...restProps\r\n    } = props\r\n\r\n    const [index, setIndex] = useState(itemIndex)\r\n    const [selected, setSelected] = useState(itemIndex > 0 ? true : false)\r\n\r\n    const selectStyle = {\r\n        minWidth: width,\r\n    }\r\n\r\n    const onMouseKeyDown = () => {\r\n        if (index < 0) {\r\n            setIndex(0)\r\n        } else {\r\n            !selected && setIndex(-1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <select\r\n            style={{...style, ...selectStyle}}\r\n            value={index}\r\n\r\n            onMouseDown={(e) => {\r\n                onMouseKeyDown()\r\n                onMouseDown && onMouseDown(e)\r\n            }}\r\n\r\n            onKeyDown={(e) => {\r\n                const code = e.code\r\n                if (code === 'Enter' || code === 'Space') {\r\n                    onMouseKeyDown()\r\n                }\r\n                onKeyDown && onKeyDown(e)\r\n            }}\r\n\r\n            onBlur={(e) => {\r\n                !selected && setIndex(-1)\r\n                onBlur && onBlur(e)\r\n            }}\r\n\r\n            onChange={(e) => {\r\n                setSelected(true)\r\n                setIndex(+e.currentTarget.value)\r\n                onChange && onChange(e)\r\n            }}\r\n\r\n            {...restProps}\r\n        >\r\n            {(index >= 0) && items.map((item, i) =>\r\n                <option key={i} value={i}>\r\n                    {item}\r\n                </option>\r\n            )}\r\n        </select>\r\n    )\r\n}","import React, {DetailedHTMLProps, HTMLAttributes, ReactNode} from 'react'\r\nimport styles from './GroupBox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultDivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype GroupBoxPropsType = DefaultDivPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n}\r\n\r\nexport const GroupBox: React.FC<GroupBoxPropsType> = (props) => {\r\n    const {\r\n        children,\r\n        ...restProps\r\n    } = props\r\n\r\n    return (\r\n        <div\r\n            className={styles.block}\r\n            {...restProps}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './ModalWindowAtElement.module.css'\r\n\r\ntype ModalWindowPropsType = {\r\n    active: boolean\r\n    // setActive: (active: boolean) => void\r\n    onModalEntireWindowClick?: ()=>void\r\n}\r\n\r\nexport const ModalWindowAtElement: React.FC<ModalWindowPropsType> = (props) => {\r\n    if (props.active) {\r\n        return (\r\n            <>\r\n                <div\r\n                    className={styles.modalEntireWindow}\r\n                    // onClick={()=>alert('Entire window!')}\r\n                    onClick={props.onModalEntireWindowClick}\r\n                >\r\n                </div>\r\n\r\n                <div\r\n                    className={styles.modalContent}\r\n                    // onClick={()=>alert('Modal content!')}\r\n                >\r\n                    {props.children}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return <></>\r\n}","import React, {useState} from 'react'\r\nimport styles from './DatePicker.module.css'\r\nimport {ModalWindowAtElement} from '../ModalWindowAtElement/ModalWindowAtElement';\r\n\r\n/*\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype EditPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    title?: string\r\n    textAlignmentRight?: boolean\r\n    text: string\r\n}\r\n*/\r\n\r\ntype DatePickerPropsType = {\r\n    initDate?: Date\r\n    initTitleDate?: Date\r\n    changeTitleDate?: (date: Date) => void\r\n    getDate?: (date: Date) => void\r\n    previousMonthFunction?: () => void\r\n    nextMonthFunction?: () => void\r\n    previousMonthButton?: boolean\r\n    nextMonthButton?: boolean\r\n    showFooterContent?: boolean\r\n    showFooterButtons?: boolean\r\n    monthBoardButtonUp?: () => void\r\n    monthBoardButtonLeft?: () => void\r\n    monthBoardButtonDown?: () => void\r\n    monthBoardButtonRight?: () => void\r\n    border?: boolean\r\n}\r\n\r\nconst NUMBER_OF_4_WEEKS = 4\r\nconst NUMBER_OF_5_WEEKS = 5\r\n\r\nconst DAYS_OF_WEEK_RUS = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\r\nconst MONTHS_RUS = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\r\nconst MIN_YEAR = 1950\r\nconst MAX_YEAR = 2099\r\n\r\nexport const MIN_DATE = new Date(MIN_YEAR, 0, 1)\r\nexport const MAX_DATE = new Date(MAX_YEAR, 11, 31)\r\n\r\n\r\nconst daysOfWeekFromArray = (arr: Array<string | number>) => {\r\n    const res = arr.map((el, i) => <div key={i}>{el}</div>)\r\n\r\n    return <div className={styles.bodyLine}>{res}</div>\r\n}\r\n\r\nexport const getTitleDate = (date: Date) => {\r\n    const dayOfWeek = date.getDay()\r\n    if (dayOfWeek &&\r\n        date.getMonth() !== new Date(date.getFullYear(), date.getMonth(), date.getDate() + 7 - dayOfWeek).getMonth()) {\r\n        return new Date(date.getFullYear(), date.getMonth() + 1, 1)\r\n    }\r\n    return new Date(date.getFullYear(), date.getMonth(), 1)\r\n}\r\n\r\n\r\nexport const DatePicker: React.FC<DatePickerPropsType> = (props) => {\r\n    const {\r\n        initDate = props.initDate && props.initDate >= MIN_DATE && props.initDate <= MAX_DATE\r\n            ? props.initDate\r\n            : new Date(Date.now()),\r\n        initTitleDate,\r\n        previousMonthButton = true,\r\n        nextMonthButton = true,\r\n        showFooterContent = true,\r\n        showFooterButtons = false,\r\n        border = true,\r\n    } = props\r\n\r\n    const today = new Date(Date.now())\r\n\r\n    const [titleEditMode, setTitleEditMode] = useState<Boolean>(false)\r\n\r\n    const [selectedDate, setSelectedDate] = useState<Date>(initDate)\r\n\r\n    const [titleDate, setTitleDate] = useState<Date>(initTitleDate\r\n        ? initTitleDate\r\n        : getTitleDate(selectedDate))\r\n\r\n    const firstDayOfMonth = new Date(titleDate.getFullYear(), titleDate.getMonth(), 1)\r\n    const dayOfWeekOfFirstDayOfMonth = firstDayOfMonth.getDay() > 0 ? firstDayOfMonth.getDay() : 7\r\n\r\n    const beginDate = new Date(titleDate.getFullYear(), titleDate.getMonth(), titleDate.getDate() - dayOfWeekOfFirstDayOfMonth + 1)\r\n\r\n    const numberOfWeeks =\r\n        titleDate.getMonth() === new Date(beginDate.getFullYear(), beginDate.getMonth(), beginDate.getDate() + NUMBER_OF_5_WEEKS * 7 - 1).getMonth()\r\n            ? NUMBER_OF_5_WEEKS\r\n            : NUMBER_OF_4_WEEKS\r\n\r\n\r\n    const daysLinesFromDate = (beginDate: Date, numberOfWeeks: number) => {\r\n        let date = beginDate\r\n        let res: Array<JSX.Element> = []\r\n\r\n        for (let a = 0; a < NUMBER_OF_5_WEEKS; a++) {\r\n            let line = []\r\n\r\n            for (let b = 0; b < 7; b++) {\r\n                let lineElement: string | number\r\n                if (a === NUMBER_OF_5_WEEKS - 1 && numberOfWeeks !== NUMBER_OF_5_WEEKS) {\r\n                    lineElement = ''\r\n                } else {\r\n                    lineElement = date.getDate()\r\n                }\r\n\r\n                let lineElementClassName1 = lineElement && date.toDateString() === today.toDateString() && styles.lineElementToday\r\n                let lineElementClassName2 = lineElement && date.toDateString() === selectedDate.toDateString() && styles.lineElementSelected\r\n\r\n                const dateElement = new Date(date)\r\n\r\n                line.push(\r\n                    <div\r\n                        key={a * 7 + b}\r\n                        className={`${styles.lineElement} ${lineElementClassName1} ${lineElementClassName2}`}\r\n                        onClick={() => lineElement && setNewSelectedDay(dateElement)}\r\n                    >\r\n                        {lineElement}\r\n                    </div>\r\n                )\r\n\r\n                date.setDate(date.getDate() + 1)\r\n            }\r\n\r\n            res.push(<div className={styles.bodyLine} key={a}>{line}</div>)\r\n        }\r\n\r\n        return res\r\n    }\r\n\r\n\r\n    const setNewSelectedDay = (date: Date) => {\r\n        setSelectedDate(date)\r\n        props.getDate && props.getDate(date)\r\n    }\r\n\r\n// =========================================================\r\n    const onTitleEditMode = () => {\r\n        setTitleEditMode(true)\r\n    }\r\n\r\n    const offTitleEditMode = () => {\r\n        setTitleEditMode(false)\r\n        // переключение ЗАГОЛОВКА в календаре после редактирование заголовка\r\n        // и клика в стороне\r\n        props.changeTitleDate && props.changeTitleDate(titleDate)\r\n    }\r\n\r\n    const allMonths = (currentMonth: number) => {\r\n        return (\r\n            <select\r\n                onChange={(e) => {\r\n                    const date = new Date(titleDate.getFullYear(), +e.currentTarget.value, 1)\r\n                    setTitleDate(date)\r\n                    // переключение ЗАГОЛОВКА в календаре после редактирование месяца в заголовке\r\n                    // props.changeTitleDate && props.changeTitleDate(date)\r\n                }}\r\n            >\r\n                {MONTHS_RUS.map((el, i) =>\r\n                    <option\r\n                        key={i}\r\n                        className={currentMonth === i ? styles.selectedMonthYear : ''}\r\n                        selected={currentMonth === i}\r\n                        value={i}\r\n                    >{el}</option>)}\r\n            </select>\r\n        )\r\n    }\r\n\r\n\r\n    const allYears = (currentYear: number) => {\r\n        let years: Array<JSX.Element> = []\r\n\r\n        for (let i = MAX_YEAR; i >= MIN_YEAR; i--) {\r\n            years.push(<option\r\n                key={i}\r\n                className={currentYear === i ? styles.selectedMonthYear : ''}\r\n                selected={currentYear === i}\r\n                value={i}\r\n            >{i}</option>)\r\n        }\r\n\r\n        return (\r\n            <select\r\n                onChange={(e) => {\r\n                    const date = new Date(+e.currentTarget.value, titleDate.getMonth(), 1)\r\n                    setTitleDate(date)\r\n\r\n                    // переключение ЗАГОЛОВКА в календаре после редактирование года в заголовке\r\n                    // props.changeTitleDate && props.changeTitleDate(date)\r\n                }}\r\n            >\r\n                {years}\r\n            </select>\r\n        )\r\n    }\r\n// =========================================================\r\n\r\n\r\n    return (\r\n        <div className={border ? styles.containerBorder : ''}>\r\n            <div className={styles.header}>\r\n                <div className={styles.titleButton}>\r\n                    {previousMonthButton && <button\r\n                        onClick={() => {\r\n                            if (props.previousMonthFunction) {\r\n                                props.previousMonthFunction()\r\n                            } else {\r\n                                setTitleDate(date => new Date(date.getFullYear(), date.getMonth() - 1, 1) >= MIN_DATE\r\n                                    ? new Date(date.setMonth(date.getMonth() - 1))\r\n                                    : date)\r\n                            }\r\n                        }}\r\n                    >\r\n                        {'<'}\r\n                    </button>}\r\n                </div>\r\n\r\n                <div\r\n                    className={styles.titleText}\r\n                    onDoubleClick={onTitleEditMode}\r\n                    // onBlur={offTitleEditMode}\r\n                >\r\n                    {!titleEditMode\r\n                        ? `${titleDate.toLocaleString('default', {month: 'long'})}, ${titleDate.getFullYear()}`\r\n                        : <div style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            // border: '1px solid red',\r\n                        }}>\r\n                            <ModalWindowAtElement\r\n                                active={true}\r\n                                onModalEntireWindowClick={offTitleEditMode}\r\n                            >\r\n                                {allMonths(titleDate.getMonth())} {allYears(titleDate.getFullYear())}\r\n                            </ModalWindowAtElement>\r\n                        </div>\r\n\r\n                    }\r\n                </div>\r\n\r\n                <div className={styles.titleButton}>\r\n                    {nextMonthButton && <button\r\n                        onClick={() => {\r\n\r\n                            if (props.nextMonthFunction) {\r\n                                props.nextMonthFunction()\r\n                            } else {\r\n                                // setTitleDate(date => new Date(date.setMonth(date.getMonth() + 1)))\r\n                                setTitleDate(date => new Date(date.getFullYear(), date.getMonth() + 1, 1) <= MAX_DATE\r\n                                    ? new Date(date.setMonth(date.getMonth() + 1))\r\n                                    : date)\r\n                            }\r\n                        }}\r\n                    >\r\n                        {'>'}\r\n                    </button>}\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={styles.body + ' ' + (titleEditMode ? styles.bodyBackground : '')}>\r\n                {daysOfWeekFromArray(DAYS_OF_WEEK_RUS)}\r\n                <div>\r\n                    <hr style={{margin: '1px 5px'}}/>\r\n                </div>\r\n                {daysLinesFromDate(beginDate, numberOfWeeks)}\r\n            </div>\r\n\r\n\r\n            <div className={styles.footer}>\r\n                {showFooterContent && <div className={styles.currentDateTitle}\r\n                                           onClick={() => {\r\n                                               setNewSelectedDay(today)\r\n                                               setTitleDate(getTitleDate(today))\r\n                                           }}\r\n                >\r\n                    {`Today: ${today.toLocaleString('default', {month: 'long'})} ${today.getDate()}, ${today.getFullYear()}`}\r\n                </div>}\r\n\r\n                {showFooterButtons && <div className={styles.monthBoardButtons}>\r\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <button\r\n                            className={styles.monthBoardButton}\r\n                            onClick={() => props.monthBoardButtonUp && props.monthBoardButtonUp()}>\r\n                            {'^'}\r\n                        </button>\r\n                    </div>\r\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <button\r\n                            className={styles.monthBoardButton}\r\n                            onClick={() => props.monthBoardButtonLeft && props.monthBoardButtonLeft()}>\r\n                            {'<'}\r\n                        </button>\r\n                        <button\r\n                            className={styles.monthBoardButton}\r\n                            onClick={() => props.monthBoardButtonDown && props.monthBoardButtonDown()}>\r\n                            {'v'}\r\n                        </button>\r\n                        <button\r\n                            className={styles.monthBoardButton}\r\n                            onClick={() => props.monthBoardButtonRight && props.monthBoardButtonRight()}>\r\n                            {'>'}\r\n                        </button>\r\n                    </div>\r\n                </div>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport styles from './DatePickerTable.module.css'\r\nimport {DatePicker, getTitleDate, MAX_DATE, MIN_DATE} from '../DatePicker/DatePicker';\r\n\r\n\r\nconst MAX_Y_TABLE = 3\r\nconst MAX_X_TABLE = 4\r\n\r\n\r\ntype DatePickerTablePropsType = {\r\n    initDate?: Date\r\n    // initSize?: [1 | 2 | 3, 1 | 2 | 3 | 4]\r\n    initSize?: [number, number]\r\n    getInitSize?: (size: [number, number]) => void\r\n    getDate?: (date: Date) => void\r\n}\r\n\r\nlet key = 0\r\n\r\nexport const DatePickerTable: React.FC<DatePickerTablePropsType> = (props) => {\r\n\r\n    const {\r\n        initDate = new Date(Date.now()),\r\n        initSize =\r\n            props.initSize &&\r\n            props.initSize[0] >= 1 && props.initSize[0] <= MAX_Y_TABLE &&\r\n            props.initSize[1] >= 1 && props.initSize[1] <= MAX_X_TABLE\r\n                ? props.initSize\r\n                : [1, 1],\r\n    } = props\r\n\r\n    const [selectedDate, setSelectedDate] = useState<Date>(initDate)\r\n\r\n    const [titleDate, setTitleDate] = useState<Date>(() => {\r\n        const dayOfWeek = selectedDate.getDay()\r\n        if (dayOfWeek &&\r\n            selectedDate.getMonth() !== new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate() + 7 - dayOfWeek).getMonth()) {\r\n            return new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 1)\r\n        }\r\n        return new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1)\r\n    })\r\n\r\n    const [table, setTable] = useState(initSize)\r\n\r\n    const createDatePickersTable = () => {\r\n        let outerContent: Array<JSX.Element> = []\r\n\r\n        for (let y = 0; y < table[0]; y++) {\r\n            let innerContent: Array<JSX.Element> = []\r\n\r\n            for (let x = 0; x < table[1]; x++) {\r\n                const show = y === 0 && x === 0\r\n                innerContent.push(\r\n                    <td key={key++}>\r\n                        <DatePicker\r\n                            initDate={selectedDate}\r\n                            getDate={(date) => {\r\n                                setSelectedDate(date)\r\n                                setTitleDate(getTitleDate(date))\r\n                                props.getDate && props.getDate(date)\r\n                            }}\r\n\r\n                            initTitleDate={new Date(titleDate.getFullYear(), titleDate.getMonth() + y * table[1] + x, titleDate.getDate())}\r\n\r\n                            changeTitleDate={(date) => setTitleDate(new Date(date.getFullYear(), date.getMonth() - (y * table[1] + x), 1))}\r\n\r\n                            previousMonthButton={show}\r\n                            previousMonthFunction={() => {\r\n                                setTitleDate(date => new Date(date.getFullYear(), date.getMonth() - 1, 1) >= MIN_DATE\r\n                                    ? new Date(date.setMonth(date.getMonth() - 1))\r\n                                    : date)\r\n                            }}\r\n                            nextMonthButton={y === 0 && x === table[1] - 1}\r\n                            nextMonthFunction={() =>\r\n                                setTitleDate(date => new Date(date.getFullYear(), date.getMonth() + 1, 1) <= MAX_DATE\r\n                                    ? new Date(date.setMonth(date.getMonth() + 1))\r\n                                    : date)\r\n                            }\r\n                            showFooterButtons={show}\r\n                            showFooterContent={show}\r\n                            border={false}\r\n                            monthBoardButtonLeft={() => setTable(state => {\r\n                                const size = state[1] > 1 ? [state[0], (state[1] - 1)] : state\r\n                                props.getInitSize && props.getInitSize(size as [number, number])\r\n                                return size as [number, number]\r\n                            })}\r\n                            monthBoardButtonRight={() => setTable(state => {\r\n                                const size = state[1] < MAX_X_TABLE ? [state[0], state[1] + 1] : state\r\n                                props.getInitSize && props.getInitSize(size as [number, number])\r\n                                return size as [number, number]\r\n                            })}\r\n                            monthBoardButtonUp={() => setTable(state => {\r\n                                const size = state[0] > 1 ? [state[0] - 1, state[1]] : state\r\n                                props.getInitSize && props.getInitSize(size as [number, number])\r\n                                return size as [number, number]\r\n                            })}\r\n                            monthBoardButtonDown={() => setTable(state => {\r\n                                const size = state[0] < MAX_Y_TABLE ? [state[0] + 1, state[1]] : state\r\n                                props.getInitSize && props.getInitSize(size as [number, number])\r\n                                return size as [number, number]\r\n                            })}\r\n                        />\r\n                    </td>\r\n                )\r\n\r\n                if (table[1] > 1 && x < table[1] - 1) {\r\n                    innerContent.push(<td key={key++} width={5}></td>)\r\n                }\r\n            }\r\n            outerContent.push(<tr key={key++}>{innerContent}</tr>)\r\n            if (table[0] > 1 && y < table[0] - 1) {\r\n                outerContent.push(<tr key={key++} style={{height: '5px'}}></tr>)\r\n            }\r\n        }\r\n\r\n        // return <table cellSpacing={0} cellPadding={0} style={{border: '1px solid green'}}>{outerContent}</table>\r\n        // return <table cellSpacing={0} cellPadding={0} style={{border: '1px solid green'}}>{outerContent}</table>\r\n        return outerContent\r\n    }\r\n\r\n\r\n    return (\r\n        // <div className={styles.tableContent}>\r\n        <table\r\n            className={styles.tableContent}\r\n            cellSpacing={0}\r\n            cellPadding={0}\r\n        >\r\n            <tbody>\r\n            {createDatePickersTable()}\r\n            </tbody>\r\n        </table>\r\n        // </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport styles from './DateEdit.module.css'\r\nimport {ModalWindowAtElement} from '../ModalWindowAtElement/ModalWindowAtElement';\r\nimport {DatePickerTable} from '../DatePickerTable/DatePickerTable';\r\n\r\n/*\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype EditPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    title?: string\r\n    textAlignmentRight?: boolean\r\n    text: string\r\n}\r\n*/\r\n\r\ntype DateEditPropsType = {\r\n    initDate?: Date\r\n    getDate?: (date: Date) => void\r\n    initSize?: [number, number]\r\n    showBorder?: boolean\r\n}\r\n\r\nexport const DateEdit: React.FC<DateEditPropsType> = (props) => {\r\n    const {\r\n        initDate = new Date(Date.now()),\r\n        initSize = props.initSize || [1, 1],\r\n        showBorder = true,\r\n    } = props\r\n\r\n    const [date, setDate] = useState(initDate)\r\n    const [size, setSize] = useState<[number, number]>(initSize)\r\n    const [modalActive, setModalActive] = useState(false)\r\n\r\n    const showDatePicker = () => {\r\n        setModalActive(!modalActive)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${styles.container} ${showBorder ? styles.containerBorder : ''}`}>\r\n                <input\r\n                    className={styles.inputDate}\r\n                    type={'text'}\r\n                    placeholder={'date'}\r\n                    maxLength={8}\r\n                    value={date.toLocaleString('default', {day: '2-digit', month: '2-digit', year: '2-digit'})}\r\n                />\r\n\r\n                <button\r\n                    onClick={showDatePicker}\r\n                >\r\n                    D\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <ModalWindowAtElement\r\n                active={modalActive}\r\n                onModalEntireWindowClick={() => setModalActive(false)}\r\n            >\r\n                <DatePickerTable\r\n                    initDate={date}\r\n                    getDate={(newDate) => {\r\n                        setDate(newDate)\r\n                        setModalActive(false)\r\n                        props.getDate && props.getDate(newDate)\r\n                    }}\r\n                    initSize={size}\r\n                    getInitSize={(size) => setSize(size)}\r\n                />\r\n            </ModalWindowAtElement>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {ShowComponent} from './utils/ShowComponent/ShowComponent';\r\nimport {ShowResult} from './utils/ShowResult/ShowResult';\r\nimport {Label} from './components/Label/Label';\r\nimport {Edit} from './components/Edit/Edit';\r\nimport {CheckBox} from './components/CheckBox/CheckBox';\r\nimport {BitBtn} from './components/BitBtn/BitBtn';\r\nimport {Memo} from './components/Memo/Memo';\r\nimport {ComboBox} from './components/ComboBox/ComboBox';\r\nimport {GroupBox} from './components/GroupBox/GroupBox';\r\nimport {DateTimeEdit} from './components/DateTimeEdit/DateTimeEdit';\r\nimport {DatePicker} from './components/DatePicker/DatePicker';\r\nimport {DateEdit} from './components/DateEdit/DateEdit';\r\nimport { ModalWindowAtElement } from './components/ModalWindowAtElement/ModalWindowAtElement';\r\nimport {DatePickerTable} from './components/DatePickerTable/DatePickerTable';\r\n\r\n\r\nfunction App() {\r\n    const [edit1, setEdit1] = useState('Edit text with Title1')\r\n    const [edit2, setEdit2] = useState('Edit text without Title2')\r\n\r\n    const [checkBox1, setCheckBox1] = useState(false)\r\n    const [checkBox2, setCheckBox2] = useState(false)\r\n\r\n    const [memo1, setMemo1] = useState(['Memo text1', 'Memo text2'])\r\n\r\n    const comboBoxItems1 = ['line1', 'line2', 'line3', 'line4', 'line5', 'line6', 'line7', 'line8', 'line9']\r\n    const [comboBoxItemIndex1, setComboBoxItemIndex1] = useState(-1)\r\n    const comboBoxItems2 = ['line12', 'line22', 'line32', 'line42', 'line52', 'line62', 'line72', 'line82', 'line92']\r\n    const [comboBoxItemIndex2, setComboBoxItemIndex2] = useState(4)\r\n\r\n    // const [date1, setDate1] = useState(new Date(2022, 1, 25))\r\n    const [date1, setDate1] = useState(new Date(2021, 11, 28))\r\n    const [date2, setDate2] = useState(new Date(1981, 11, 2))\r\n    const [date3, setDate3] = useState(new Date(2021, 11, 31))\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <ShowComponent name={'DateEdit'}>\r\n                <DateEdit\r\n                    initDate={date2}\r\n                    getDate={setDate2}\r\n                />\r\n                <p/>\r\n                <DateEdit\r\n                    initDate={date2}\r\n                    getDate={setDate2}\r\n                    showBorder={false}\r\n                />\r\n\r\n                <ShowResult\r\n                    result={date2.toLocaleString('default', {day: '2-digit', month: 'long', year: 'numeric'})}/>\r\n            </ShowComponent>\r\n\r\n\r\n\r\n            <ShowComponent name={'DatePickerTable'}>\r\n                    <DatePickerTable\r\n                        initDate={date3}\r\n                        initSize={[2,3]}\r\n                        getDate={setDate3}\r\n                    />\r\n\r\n                <ShowResult\r\n                    result={date3.toLocaleString('default', {day: '2-digit', month: 'long', year: 'numeric'})}/>\r\n            </ShowComponent>\r\n\r\n\r\n\r\n            <ShowComponent name={'DatePicker'}>\r\n                <div style={{display: 'flex'}}>\r\n                    <DatePicker\r\n                        initDate={date1}\r\n                        getDate={setDate1}\r\n                        showFooterButtons={true}\r\n                        monthBoardButtonDown={() => alert('DOWN button pressed!')}\r\n                    />\r\n                    <DatePicker\r\n                        previousMonthButton={false}\r\n                        // nextMonthButton={false}\r\n                        getDate={setDate1}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{display: 'flex'}}>\r\n                    <DatePicker\r\n                        previousMonthButton={false}\r\n                        nextMonthButton={false}\r\n                        getDate={setDate1}\r\n                    />\r\n                    <DatePicker\r\n                        previousMonthFunction={() => alert('PreviousMonth button pressed!')}\r\n                        nextMonthButton={false}\r\n                        showFooterContent={false}\r\n                        getDate={setDate1}\r\n                    />\r\n                </div>\r\n\r\n                <ShowResult\r\n                    result={date1.toLocaleString('default', {day: '2-digit', month: 'long', year: 'numeric'})}/>\r\n            </ShowComponent>\r\n\r\n\r\n            {/*<ShowComponent name={'DateTimeEdit'}>*/}\r\n            {/*    <DateTimeEdit/>*/}\r\n            {/*</ShowComponent>*/}\r\n\r\n            <hr style={{margin: '30px 0'}}/>\r\n\r\n\r\n            <ShowComponent name={'Label'}>\r\n                <Label caption={'Label text'}/>\r\n            </ShowComponent>\r\n\r\n\r\n            <ShowComponent name={'Edit'}>\r\n                <Edit\r\n                    title={' Edit with title RightJustify'}\r\n                    textAlignmentRight={true}\r\n                    text={edit1}\r\n                    onChange={(e) => setEdit1(e.currentTarget.value)}\r\n                />\r\n                <ShowResult result={edit1}/>\r\n                <hr color={'green'}/>\r\n\r\n                <Edit\r\n                    title={'Edit with title LeftJustify '}\r\n                    textAlignmentRight={false}\r\n                    text={edit1}\r\n                    onChange={(e) => setEdit1(e.currentTarget.value)}\r\n                />\r\n                <ShowResult result={edit1}/>\r\n                <hr color={'green'}/>\r\n\r\n                <Edit\r\n                    text={edit2}\r\n                    onChange={(e) => setEdit2(e.currentTarget.value)}\r\n                />\r\n                <ShowResult result={edit2}/>\r\n            </ShowComponent>\r\n\r\n\r\n            <ShowComponent name={'CheckBox'}>\r\n                <CheckBox\r\n                    caption={'CheckBox RightJustify'}\r\n                    textAlignmentRight={true}\r\n                    checked={checkBox1}\r\n                    onChange={(e) => setCheckBox1(e.currentTarget.checked)}\r\n                />\r\n                <ShowResult result={checkBox1 ? 'checked' : 'unChecked'}/>\r\n                <hr color={'green'}/>\r\n\r\n                <CheckBox\r\n                    caption={'CheckBox LeftJustify'}\r\n                    textAlignmentRight={false}\r\n                    checked={checkBox2}\r\n                    onChange={(e) => setCheckBox2(e.currentTarget.checked)}\r\n                />\r\n                <ShowResult result={checkBox2 ? 'checked' : 'unChecked'}/>\r\n            </ShowComponent>\r\n\r\n\r\n            <ShowComponent name={'BitBtn'}>\r\n                <BitBtn\r\n                    caption={'BitButton with Image'}\r\n                    image={'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/Approve_icon.svg/1200px-Approve_icon.svg.png'}\r\n                    imageWidth={40}\r\n                    imageHeight={40}\r\n                    onClick={() => alert('Button pressed!')}\r\n                />\r\n                <hr color={'green'}/>\r\n\r\n                <BitBtn\r\n                    caption={'BitButton without Image'}\r\n                    onClick={() => alert('Button pressed!')}\r\n                />\r\n            </ShowComponent>\r\n\r\n\r\n            <ShowComponent name={'Memo'}>\r\n                <Memo\r\n                    lines={memo1}\r\n                    rows={5}\r\n                    cols={75}\r\n                    onChange={(e) => setMemo1(e.currentTarget.value.split('\\n'))}\r\n                />\r\n                <ShowResult result={memo1.join('\\n')}/>\r\n            </ShowComponent>\r\n\r\n\r\n            <ShowComponent name={'ComboBox'}>\r\n                <ComboBox\r\n                    items={comboBoxItems1}\r\n                    itemIndex={comboBoxItemIndex1}\r\n                    width={200}\r\n                    onChange={(e) => setComboBoxItemIndex1(+e.currentTarget.value)}\r\n                />\r\n                <ShowResult result={comboBoxItems1[comboBoxItemIndex1]}/>\r\n                <hr color={'green'}/>\r\n\r\n                <ComboBox\r\n                    items={comboBoxItems2}\r\n                    itemIndex={comboBoxItemIndex2}\r\n                    width={200}\r\n                    onChange={(e) => setComboBoxItemIndex2(+e.currentTarget.value)}\r\n                />\r\n                <ShowResult result={comboBoxItems2[comboBoxItemIndex2]}/>\r\n            </ShowComponent>\r\n\r\n\r\n            <ShowComponent name={'GroupBox'}>\r\n                <GroupBox style={{width: '750px'}}>\r\n                    <Edit\r\n                        title={'GroupBox Test '}\r\n                        text={'GroupBox Test'}\r\n                    />\r\n                    <BitBtn\r\n                        caption={'GroupBox Test'}\r\n                        onClick={() => alert('GroupBox Test!')}\r\n                    />\r\n                    <p/>\r\n                    <Memo\r\n                        lines={['GroupBox', 'Test']}\r\n                    />\r\n                </GroupBox>\r\n            </ShowComponent>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}