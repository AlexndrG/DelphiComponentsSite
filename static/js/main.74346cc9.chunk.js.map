{"version":3,"sources":["components/DatePicker/DatePicker.module.css","utils/ShowComponent/ShowComponent.module.css","components/DateEdit/DateEdit.module.css","utils/ShowResult/ShowResult.module.css","components/BitBtn/BitBtn.module.css","components/Memo/Memo.module.css","components/GroupBox/GroupBox.module.css","utils/ShowComponent/ShowComponent.tsx","utils/ShowResult/ShowResult.tsx","components/Label/Label.tsx","components/Edit/Edit.tsx","components/CheckBox/CheckBox.tsx","components/BitBtn/BitBtn.tsx","components/Memo/Memo.tsx","components/ComboBox/ComboBox.tsx","components/GroupBox/GroupBox.tsx","components/DatePicker/DatePicker.tsx","components/DateEdit/DateEdit.tsx","App.tsx","index.tsx"],"names":["module","exports","ShowComponent","props","className","styles","block","name","body","children","ShowResult","resultText","result","Label","style","caption","Edit","title","textAlignmentRight","text","restProps","value","CheckBox","type","BitBtn","image","imageWidth","imageHeight","imageStyle","width","height","src","alt","Memo","lines","textarea","join","ComboBox","items","itemIndex","onMouseDown","onKeyDown","onBlur","onChange","useState","index","setIndex","selected","setSelected","selectStyle","minWidth","onMouseKeyDown","e","code","currentTarget","map","item","i","GroupBox","daysOfWeekRus","daysOfWeekFromArray","arr","res","el","bodyLine","DatePicker","initDate","Date","now","previousMonthButton","nextMonthButton","showFooterContent","showFooterButtons","today","selectedDate","setSelectedDate","dayOfWeek","getDay","getMonth","getFullYear","getDate","titleDate","setTitleDate","firstDayOfMonth","dayOfWeekOfFirstDayOfMonth","beginDate","numberOfWeeks","NUMBER_OF_5_WEEKS","setNewSelectedDay","date","container","header","titleButton","onClick","previousMonthFunction","setMonth","titleText","toLocaleString","month","nextMonthFunction","margin","a","line","b","lineElement","lineElementClassName1","toDateString","lineElementToday","lineElementClassName2","lineElementSelected","dateElement","push","setDate","daysLinesFromDate","footer","currentDateTitle","monthBoardButtons","display","justifyContent","monthBoardButton","monthBoardButtonUp","monthBoardButtonLeft","monthBoardButtonDown","monthBoardButtonRight","DateEdit","showBorder","modalActive","setModalActive","containerBorder","inputDate","placeholder","maxLength","day","year","position","newDate","App","edit1","setEdit1","edit2","setEdit2","checkBox1","setCheckBox1","checkBox2","setCheckBox2","memo1","setMemo1","comboBoxItems1","comboBoxItemIndex1","setComboBoxItemIndex1","comboBoxItems2","comboBoxItemIndex2","setComboBoxItemIndex2","date1","setDate1","date2","setDate2","alert","color","checked","rows","cols","split","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74346cc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DatePicker_container__39YqJ\",\"header\":\"DatePicker_header__VcpTg\",\"titleButton\":\"DatePicker_titleButton__vF326\",\"titleText\":\"DatePicker_titleText__3j4a4\",\"body\":\"DatePicker_body__34n3e\",\"bodyLine\":\"DatePicker_bodyLine__1jPSH\",\"lineElement\":\"DatePicker_lineElement__pksM7\",\"lineElementToday\":\"DatePicker_lineElementToday__3qZ_H\",\"lineElementSelected\":\"DatePicker_lineElementSelected__1vMQi\",\"footer\":\"DatePicker_footer__3CCSF\",\"currentDateTitle\":\"DatePicker_currentDateTitle__FjYSB\",\"monthBoardButtons\":\"DatePicker_monthBoardButtons__2dhoI\",\"monthBoardButton\":\"DatePicker_monthBoardButton__H5FKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ShowComponent_block__11O8O\",\"name\":\"ShowComponent_name__9rbjd\",\"body\":\"ShowComponent_body__2AvZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DateEdit_container__1uTvE\",\"containerBorder\":\"DateEdit_containerBorder__lphe9\",\"inputDate\":\"DateEdit_inputDate__1-NEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ShowResult_block__1z30j\",\"resultText\":\"ShowResult_resultText__2yBac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"BitBtn_block__3EK9q\",\"image\":\"BitBtn_image__13fCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Memo_textarea__2YXkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"GroupBox_block__2HqhI\"};","import React from 'react'\r\nimport styles from './ShowComponent.module.css'\r\n\r\n\r\ntype ShowComponentPropsType = {\r\n    name: string\r\n}\r\n\r\nexport const ShowComponent: React.FC<ShowComponentPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.block}>\r\n            <div className={styles.name}>\r\n                {props.name}\r\n            </div>\r\n\r\n            <div className={styles.body}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport styles from './ShowResult.module.css'\r\n\r\n\r\ntype PropsType = {\r\n    result: string\r\n}\r\n\r\nexport const ShowResult = (props: PropsType) => {\r\n    return (\r\n        <div className={styles.block}>\r\n            <b>Result: </b>\r\n            <span className={styles.resultText}>{props.result}</span>\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, HTMLAttributes} from 'react'\r\nimport styles from './Label.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultLabelPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype LabelPropsType = DefaultLabelPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    caption: string\r\n}\r\n\r\nexport const Label: React.FC<LabelPropsType> = (props) => {\r\n    return (\r\n        <span style={props.style}>\r\n            {props.caption}\r\n        </span>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport styles from './Edit.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype EditPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    title?: string\r\n    textAlignmentRight?: boolean\r\n    text: string\r\n}\r\n\r\nexport const Edit: React.FC<EditPropsType> = (props) => {\r\n    const {\r\n        title = '',\r\n        textAlignmentRight = false,\r\n        text,\r\n        value,\r\n        ...restProps\r\n    } = props\r\n\r\n    return (\r\n        <label>\r\n            {!textAlignmentRight && <span>{title}</span>}\r\n            <input\r\n                value={text}\r\n                {...restProps}\r\n            />\r\n            {textAlignmentRight && <span>{title}</span>}\r\n        </label>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport styles from './CheckBox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype CheckBoxPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    textAlignmentRight?: boolean\r\n    caption: string\r\n}\r\n\r\nexport const CheckBox: React.FC<CheckBoxPropsType> = (props) => {\r\n    const {\r\n        textAlignmentRight,\r\n        caption,\r\n        type,\r\n        ...restProps\r\n    } = props\r\n\r\n    return (\r\n        <label>\r\n            {!textAlignmentRight && caption}\r\n            <input\r\n                type={'checkbox'}\r\n                {...restProps}\r\n            />\r\n            {textAlignmentRight && caption}\r\n        </label>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport styles from './BitBtn.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype BitBtnPropsType = DefaultButtonPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    caption: string\r\n    image?: string\r\n    imageWidth?: number\r\n    imageHeight?: number\r\n}\r\n\r\nexport const BitBtn: React.FC<BitBtnPropsType> = (props) => {\r\n    const {\r\n        caption,\r\n        image,\r\n        imageWidth = 20,\r\n        imageHeight = 20,\r\n        ...restProps\r\n    } = props\r\n\r\n    const imageStyle = {\r\n        width: imageWidth,\r\n        height: imageHeight,\r\n    }\r\n\r\n    return (\r\n        <button\r\n            {...restProps}\r\n        >\r\n            <div className={styles.block}>\r\n                {image && <img\r\n                    className={styles.image}\r\n                    style={imageStyle}\r\n                    src={image}\r\n                    alt={'BitBtn'}\r\n                />}\r\n                {caption}\r\n            </div>\r\n        </button>\r\n    )\r\n}","import React, {DetailedHTMLProps, TextareaHTMLAttributes} from 'react'\r\nimport styles from './Memo.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultTextareaPropsType = DetailedHTMLProps<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype MemoPropsType = DefaultTextareaPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    lines?: Array<string>\r\n}\r\n\r\nexport const Memo: React.FC<MemoPropsType> = (props) => {\r\n    const {\r\n        lines = [],\r\n        value,\r\n        ...restProps\r\n    } = props\r\n\r\n    return (\r\n        <>\r\n            <textarea\r\n                className={styles.textarea}\r\n                // value={lines.join('\\r\\n')}\r\n                value={lines.join('\\n')}\r\n                {...restProps}\r\n            />\r\n        </>\r\n    )\r\n}","import React, {DetailedHTMLProps, SelectHTMLAttributes, useState} from 'react'\r\nimport styles from './ComboBox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype ComboBoxPropsType = DefaultSelectPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    items?: Array<string>\r\n    itemIndex?: number\r\n    width?: number\r\n}\r\n\r\nexport const ComboBox: React.FC<ComboBoxPropsType> = (props) => {\r\n    const {\r\n        items = [],\r\n        itemIndex = 0,\r\n        width = 0,\r\n        style = {},\r\n\r\n        onMouseDown,\r\n        onKeyDown,\r\n        onBlur,\r\n        onChange,\r\n\r\n        ...restProps\r\n    } = props\r\n\r\n    const [index, setIndex] = useState(itemIndex)\r\n    const [selected, setSelected] = useState(itemIndex > 0 ? true : false)\r\n\r\n    const selectStyle = {\r\n        minWidth: width,\r\n    }\r\n\r\n    const onMouseKeyDown = () => {\r\n        if (index < 0) {\r\n            setIndex(0)\r\n        } else {\r\n            !selected && setIndex(-1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <select\r\n            style={{...style, ...selectStyle}}\r\n            value={index}\r\n\r\n            onMouseDown={(e) => {\r\n                onMouseKeyDown()\r\n                onMouseDown && onMouseDown(e)\r\n            }}\r\n\r\n            onKeyDown={(e) => {\r\n                const code = e.code\r\n                if (code === 'Enter' || code === 'Space') {\r\n                    onMouseKeyDown()\r\n                }\r\n                onKeyDown && onKeyDown(e)\r\n            }}\r\n\r\n            onBlur={(e) => {\r\n                !selected && setIndex(-1)\r\n                onBlur && onBlur(e)\r\n            }}\r\n\r\n            onChange={(e) => {\r\n                setSelected(true)\r\n                setIndex(+e.currentTarget.value)\r\n                onChange && onChange(e)\r\n            }}\r\n\r\n            {...restProps}\r\n        >\r\n            {(index >= 0) && items.map((item, i) =>\r\n                <option key={i} value={i}>\r\n                    {item}\r\n                </option>\r\n            )}\r\n        </select>\r\n    )\r\n}","import React, {DetailedHTMLProps, HTMLAttributes, ReactNode} from 'react'\r\nimport styles from './GroupBox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultDivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype GroupBoxPropsType = DefaultDivPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n}\r\n\r\nexport const GroupBox: React.FC<GroupBoxPropsType> = (props) => {\r\n    const {\r\n        children,\r\n        ...restProps\r\n    } = props\r\n\r\n    return (\r\n        <div\r\n            className={styles.block}\r\n            {...restProps}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport styles from './DatePicker.module.css'\r\n\r\n/*\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype EditPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    title?: string\r\n    textAlignmentRight?: boolean\r\n    text: string\r\n}\r\n*/\r\n\r\ntype DatePickerPropsType = {\r\n    initDate?: Date\r\n    getDate?: (date: Date) => void\r\n    previousMonthFunction?: () => void\r\n    nextMonthFunction?: () => void\r\n    previousMonthButton?: boolean\r\n    nextMonthButton?: boolean\r\n    showFooterContent?: boolean\r\n    showFooterButtons?: boolean\r\n    monthBoardButtonUp?: () => void\r\n    monthBoardButtonLeft?: () => void\r\n    monthBoardButtonDown?: () => void\r\n    monthBoardButtonRight?: () => void\r\n}\r\n\r\nconst daysOfWeekRus = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\r\n\r\nconst daysOfWeekFromArray = (arr: Array<string | number>) => {\r\n    const res = arr.map((el, i) => <div key={i}>{el}</div>)\r\n\r\n    return <div className={styles.bodyLine}>{res}</div>\r\n}\r\n\r\nconst NUMBER_OF_4_WEEKS = 4\r\nconst NUMBER_OF_5_WEEKS = 5\r\n\r\n\r\nexport const DatePicker: React.FC<DatePickerPropsType> = (props) => {\r\n    const {\r\n        initDate = new Date(Date.now()),\r\n        previousMonthButton = true,\r\n        nextMonthButton = true,\r\n        showFooterContent = true,\r\n        showFooterButtons = false,\r\n    } = props\r\n\r\n    const today = new Date(Date.now())\r\n\r\n    // const [selectedDate, setSelectedDate] = useState(props.initDate || new Date(Date.now()))\r\n    const [selectedDate, setSelectedDate] = useState<Date>(initDate)\r\n\r\n    // const [titleDate, setTitleDate] = useState(new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1))\r\n    const [titleDate, setTitleDate] = useState<Date>(() => {\r\n        const dayOfWeek = selectedDate.getDay()\r\n        if (dayOfWeek &&\r\n            selectedDate.getMonth() !== new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate() + 7 - dayOfWeek).getMonth()) {\r\n            return new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 1)\r\n        }\r\n        return new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1)\r\n    })\r\n\r\n    const firstDayOfMonth = new Date(titleDate.getFullYear(), titleDate.getMonth(), 1)\r\n    const dayOfWeekOfFirstDayOfMonth = firstDayOfMonth.getDay() > 0 ? firstDayOfMonth.getDay() : 7\r\n\r\n    const beginDate = new Date(titleDate.getFullYear(), titleDate.getMonth(), titleDate.getDate() - dayOfWeekOfFirstDayOfMonth + 1)\r\n\r\n    const numberOfWeeks =\r\n        titleDate.getMonth() === new Date(beginDate.getFullYear(), beginDate.getMonth(), beginDate.getDate() + NUMBER_OF_5_WEEKS * 7 - 1).getMonth()\r\n            ? NUMBER_OF_5_WEEKS\r\n            : NUMBER_OF_4_WEEKS\r\n\r\n    // if (initDate > new Date(beginDate.getFullYear(), beginDate.getMonth(), beginDate.getDate() + numberOfWeeks * 7 - 1)) {\r\n    //     setTitleDate(new Date(titleDate.getFullYear(), titleDate.getMonth()+1, 1))\r\n    // }\r\n\r\n    const daysLinesFromDate = (beginDate: Date, numberOfWeeks: number) => {\r\n        let date = beginDate\r\n        let res: Array<JSX.Element> = []\r\n\r\n        for (let a = 0; a < NUMBER_OF_5_WEEKS; a++) {\r\n            let line = []\r\n\r\n            for (let b = 0; b < 7; b++) {\r\n                let lineElement: string | number\r\n                if (a === NUMBER_OF_5_WEEKS - 1 && numberOfWeeks !== NUMBER_OF_5_WEEKS) {\r\n                    lineElement = ''\r\n                } else {\r\n                    lineElement = date.getDate()\r\n                }\r\n\r\n                let lineElementClassName1 = lineElement && date.toDateString() === today.toDateString() && styles.lineElementToday\r\n                let lineElementClassName2 = lineElement && date.toDateString() === selectedDate.toDateString() && styles.lineElementSelected\r\n\r\n                const dateElement = new Date(date)\r\n\r\n                line.push(\r\n                    <div\r\n                        key={a * 7 + b}\r\n                        className={`${styles.lineElement} ${lineElementClassName1} ${lineElementClassName2}`}\r\n                        onClick={() => lineElement && setNewSelectedDay(dateElement)}\r\n                    >\r\n                        {lineElement}\r\n                    </div>\r\n                )\r\n\r\n                date.setDate(date.getDate() + 1)\r\n            }\r\n\r\n            res.push(<div className={styles.bodyLine} key={a}>{line}</div>)\r\n        }\r\n\r\n        return res\r\n    }\r\n\r\n\r\n    const setNewSelectedDay = (date: Date) => {\r\n        setSelectedDate(date)\r\n        props.getDate && props.getDate(date)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.header}>\r\n                <div className={styles.titleButton}>\r\n                    {previousMonthButton && <button\r\n                        onClick={() => {\r\n                            if (props.previousMonthFunction) {\r\n                                props.previousMonthFunction()\r\n                            } else {\r\n                                setTitleDate(date => new Date(date.setMonth(date.getMonth() - 1)))\r\n                            }\r\n                        }}\r\n                    >\r\n                        {'<'}\r\n                    </button>}\r\n                </div>\r\n\r\n                <div className={styles.titleText}>\r\n                    {`${titleDate.toLocaleString('default', {month: 'long'})}, ${titleDate.getFullYear()}`}\r\n                </div>\r\n\r\n                <div className={styles.titleButton}>\r\n                    {nextMonthButton && <button\r\n                        className={styles.titleButton}\r\n                        onClick={() => {\r\n                            if (props.nextMonthFunction) {\r\n                                props.nextMonthFunction()\r\n                            } else {\r\n                                setTitleDate(date => new Date(date.setMonth(date.getMonth() + 1)))\r\n                            }\r\n                        }}\r\n                    >\r\n                        {'>'}\r\n                    </button>}\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={styles.body}>\r\n                {daysOfWeekFromArray(daysOfWeekRus)}\r\n                <div>\r\n                    <hr style={{margin: '1px 5px'}}/>\r\n                </div>\r\n                {daysLinesFromDate(beginDate, numberOfWeeks)}\r\n            </div>\r\n\r\n\r\n            <div className={styles.footer}>\r\n                {showFooterContent && <div className={styles.currentDateTitle}\r\n                                           onClick={() => {\r\n                                               setNewSelectedDay(today)\r\n                                               setTitleDate(new Date(today.getFullYear(), today.getMonth(), 1))\r\n                                           }}\r\n                >\r\n                    {`Today: ${today.toLocaleString('default', {month: 'long'})} ${today.getDate()}, ${today.getFullYear()}`}\r\n                </div>}\r\n\r\n                {showFooterButtons && <div className={styles.monthBoardButtons}>\r\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <button\r\n                            className={styles.monthBoardButton}\r\n                            onClick={() => props.monthBoardButtonUp && props.monthBoardButtonUp()}>\r\n                            {'^'}\r\n                        </button>\r\n                    </div>\r\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <button\r\n                            className={styles.monthBoardButton}\r\n                            onClick={() => props.monthBoardButtonLeft && props.monthBoardButtonLeft()}>\r\n                            {'<'}\r\n                        </button>\r\n                        <button\r\n                            className={styles.monthBoardButton}\r\n                            onClick={() => props.monthBoardButtonDown && props.monthBoardButtonDown()}>\r\n                            {'v'}\r\n                        </button>\r\n                        <button\r\n                            className={styles.monthBoardButton}\r\n                            onClick={() => props.monthBoardButtonRight && props.monthBoardButtonRight()}>\r\n                            {'>'}\r\n                        </button>\r\n                    </div>\r\n                </div>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport styles from './DateEdit.module.css'\r\nimport {ModalWindow} from '../ModalWindow/ModalWindow';\r\nimport {DatePicker} from '../DatePicker/DatePicker';\r\n\r\n/*\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтобы не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype EditPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    title?: string\r\n    textAlignmentRight?: boolean\r\n    text: string\r\n}\r\n*/\r\n\r\ntype DateEditPropsType = {\r\n    initDate?: Date\r\n    getDate?: (date: Date) => void\r\n    showBorder?: boolean\r\n}\r\n\r\nexport const DateEdit: React.FC<DateEditPropsType> = (props) => {\r\n    const {\r\n        initDate = new Date(Date.now()),\r\n        showBorder = true,\r\n    } = props\r\n\r\n    const [date, setDate] = useState(initDate)\r\n    const [modalActive, setModalActive] = useState(false)\r\n\r\n    const showDatePicker = () => {\r\n        modalActive\r\n            ? setModalActive(false)\r\n            : setModalActive(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${styles.container} ${showBorder ? styles.containerBorder : ''}`}>\r\n                <input\r\n                    className={styles.inputDate}\r\n                    type={'text'}\r\n                    placeholder={'date'}\r\n                    maxLength={8}\r\n                    value={date.toLocaleString('default', {day: '2-digit', month: '2-digit', year: '2-digit'})}\r\n                />\r\n\r\n                <button\r\n                    onClick={showDatePicker}\r\n                >\r\n                    D\r\n                </button>\r\n\r\n                {/*<ModalWindow active={modalActive}>*/}\r\n                {/*    <DatePicker*/}\r\n                {/*        initDate={date}*/}\r\n                {/*        getDate={(newDate) => {*/}\r\n                {/*            setDate(newDate)*/}\r\n                {/*            setModalActive(false)*/}\r\n                {/*            props.getDate && props.getDate(newDate)*/}\r\n                {/*        }}*/}\r\n                {/*    />*/}\r\n                {/*</ModalWindow>*/}\r\n            </div>\r\n\r\n            {modalActive && <div style={{position: 'absolute'}}>\r\n                <div\r\n                    // style={{border: '1px solid red'}}\r\n                >\r\n                    <DatePicker\r\n                        initDate={date}\r\n                        getDate={(newDate) => {\r\n                            setDate(newDate)\r\n                            setModalActive(false)\r\n                            props.getDate && props.getDate(newDate)\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {ShowComponent} from './utils/ShowComponent/ShowComponent';\nimport {ShowResult} from './utils/ShowResult/ShowResult';\nimport {Label} from './components/Label/Label';\nimport {Edit} from './components/Edit/Edit';\nimport {CheckBox} from './components/CheckBox/CheckBox';\nimport {BitBtn} from './components/BitBtn/BitBtn';\nimport {Memo} from './components/Memo/Memo';\nimport {ComboBox} from './components/ComboBox/ComboBox';\nimport {GroupBox} from './components/GroupBox/GroupBox';\nimport {DateTimeEdit} from './components/DateTimeEdit/DateTimeEdit';\nimport {DatePicker} from './components/DatePicker/DatePicker';\nimport {DateEdit} from './components/DateEdit/DateEdit';\n\nfunction App() {\n    const [edit1, setEdit1] = useState('Edit text with Title1')\n    const [edit2, setEdit2] = useState('Edit text without Title2')\n\n    const [checkBox1, setCheckBox1] = useState(false)\n    const [checkBox2, setCheckBox2] = useState(false)\n\n    const [memo1, setMemo1] = useState(['Memo text1', 'Memo text2'])\n\n    const comboBoxItems1 = ['line1', 'line2', 'line3', 'line4', 'line5', 'line6', 'line7', 'line8', 'line9']\n    const [comboBoxItemIndex1, setComboBoxItemIndex1] = useState(-1)\n    const comboBoxItems2 = ['line12', 'line22', 'line32', 'line42', 'line52', 'line62', 'line72', 'line82', 'line92']\n    const [comboBoxItemIndex2, setComboBoxItemIndex2] = useState(4)\n\n    // const [date1, setDate1] = useState(new Date(2022, 1, 25))\n    const [date1, setDate1] = useState(new Date(2021, 11, 28))\n    const [date2, setDate2] = useState(new Date(1981, 11, 2))\n\n\n    return (\n        <div className=\"App\">\n            <ShowComponent name={'DateEdit'}>\n                <DateEdit\n                    initDate={date2}\n                    getDate={setDate2}\n                />\n                <p/>\n                <DateEdit\n                    initDate={date2}\n                    getDate={setDate2}\n                    showBorder={false}\n                />\n\n                <ShowResult\n                    result={date2.toLocaleString('default', {day: '2-digit', month: 'long', year: 'numeric'})}/>\n            </ShowComponent>\n\n\n            <ShowComponent name={'DatePicker'}>\n                <div style={{display: 'flex'}}>\n                    <DatePicker\n                        initDate={date1}\n                        getDate={setDate1}\n                        showFooterButtons={true}\n                        monthBoardButtonDown={()=>alert('DOWN button pressed!')}\n                    />\n                    <DatePicker\n                        previousMonthButton={false}\n                        // nextMonthButton={false}\n                        getDate={setDate1}\n                    />\n                </div>\n\n                <div style={{display: 'flex'}}>\n                    <DatePicker\n                        previousMonthButton={false}\n                        nextMonthButton={false}\n                        getDate={setDate1}\n                    />\n                    <DatePicker\n                        previousMonthFunction={() => alert('PreviousMonth button pressed!')}\n                        nextMonthButton={false}\n                        showFooterContent={false}\n                        getDate={setDate1}\n                    />\n                </div>\n\n                <ShowResult\n                    result={date1.toLocaleString('default', {day: '2-digit', month: 'long', year: 'numeric'})}/>\n            </ShowComponent>\n\n\n\n            {/*<ShowComponent name={'DateTimeEdit'}>*/}\n            {/*    <DateTimeEdit/>*/}\n            {/*</ShowComponent>*/}\n\n            <hr style={{margin: '30px 0'}}/>\n\n\n\n\n            <ShowComponent name={'Label'}>\n                <Label caption={'Label text'}/>\n            </ShowComponent>\n\n\n            <ShowComponent name={'Edit'}>\n                <Edit\n                    title={' Edit with title RightJustify'}\n                    textAlignmentRight={true}\n                    text={edit1}\n                    onChange={(e) => setEdit1(e.currentTarget.value)}\n                />\n                <ShowResult result={edit1}/>\n                <hr color={'green'}/>\n\n                <Edit\n                    title={'Edit with title LeftJustify '}\n                    textAlignmentRight={false}\n                    text={edit1}\n                    onChange={(e) => setEdit1(e.currentTarget.value)}\n                />\n                <ShowResult result={edit1}/>\n                <hr color={'green'}/>\n\n                <Edit\n                    text={edit2}\n                    onChange={(e) => setEdit2(e.currentTarget.value)}\n                />\n                <ShowResult result={edit2}/>\n            </ShowComponent>\n\n\n            <ShowComponent name={'CheckBox'}>\n                <CheckBox\n                    caption={'CheckBox RightJustify'}\n                    textAlignmentRight={true}\n                    checked={checkBox1}\n                    onChange={(e) => setCheckBox1(e.currentTarget.checked)}\n                />\n                <ShowResult result={checkBox1 ? 'checked' : 'unChecked'}/>\n                <hr color={'green'}/>\n\n                <CheckBox\n                    caption={'CheckBox LeftJustify'}\n                    textAlignmentRight={false}\n                    checked={checkBox2}\n                    onChange={(e) => setCheckBox2(e.currentTarget.checked)}\n                />\n                <ShowResult result={checkBox2 ? 'checked' : 'unChecked'}/>\n            </ShowComponent>\n\n\n            <ShowComponent name={'BitBtn'}>\n                <BitBtn\n                    caption={'BitButton with Image'}\n                    image={'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/Approve_icon.svg/1200px-Approve_icon.svg.png'}\n                    imageWidth={40}\n                    imageHeight={40}\n                    onClick={() => alert('Button pressed!')}\n                />\n                <hr color={'green'}/>\n\n                <BitBtn\n                    caption={'BitButton without Image'}\n                    onClick={() => alert('Button pressed!')}\n                />\n            </ShowComponent>\n\n\n            <ShowComponent name={'Memo'}>\n                <Memo\n                    lines={memo1}\n                    rows={5}\n                    cols={75}\n                    onChange={(e) => setMemo1(e.currentTarget.value.split('\\n'))}\n                />\n                <ShowResult result={memo1.join('\\n')}/>\n            </ShowComponent>\n\n\n            <ShowComponent name={'ComboBox'}>\n                <ComboBox\n                    items={comboBoxItems1}\n                    itemIndex={comboBoxItemIndex1}\n                    width={200}\n                    onChange={(e) => setComboBoxItemIndex1(+e.currentTarget.value)}\n                />\n                <ShowResult result={comboBoxItems1[comboBoxItemIndex1]}/>\n                <hr color={'green'}/>\n\n                <ComboBox\n                    items={comboBoxItems2}\n                    itemIndex={comboBoxItemIndex2}\n                    width={200}\n                    onChange={(e) => setComboBoxItemIndex2(+e.currentTarget.value)}\n                />\n                <ShowResult result={comboBoxItems2[comboBoxItemIndex2]}/>\n            </ShowComponent>\n\n\n            <ShowComponent name={'GroupBox'}>\n                <GroupBox style={{width: '750px'}}>\n                    <Edit\n                        title={'GroupBox Test '}\n                        text={'GroupBox Test'}\n                    />\n                    <BitBtn\n                        caption={'GroupBox Test'}\n                        onClick={() => alert('GroupBox Test!')}\n                    />\n                    <p/>\n                    <Memo\n                        lines={['GroupBox', 'Test']}\n                    />\n                </GroupBox>\n            </ShowComponent>\n\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}